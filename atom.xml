<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peter&#39;s Blog</title>
  
  <subtitle>Peter</subtitle>
  <link href="http://hanicy.com/atom.xml" rel="self"/>
  
  <link href="http://hanicy.com/"/>
  <updated>2021-10-11T02:50:50.484Z</updated>
  <id>http://hanicy.com/</id>
  
  <author>
    <name>petertang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Web技术之CSS</title>
    <link href="http://hanicy.com/2021/10/06/Web%E6%8A%80%E6%9C%AF%E4%B9%8BCSS/"/>
    <id>http://hanicy.com/2021/10/06/Web%E6%8A%80%E6%9C%AF%E4%B9%8BCSS/</id>
    <published>2021-10-06T08:25:57.000Z</published>
    <updated>2021-10-11T02:50:50.484Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="CSS简介"><a href="#CSS简介" class="headerlink" title="CSS简介"></a>CSS简介</h2><ul><li><p>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</p></li><li><p>样式定义<strong>如何显示</strong> HTML 元素</p></li><li><p>样式通常存储在<strong>样式表</strong>中</p></li><li><p>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></p></li><li><p><strong>外部样式表</strong>可以极大提高工作效率</p></li><li><p>外部样式表通常存储在 <strong>CSS 文件</strong>中</p></li><li><p>多个样式定义可<strong>层叠</strong>为一个</p></li></ul><h2 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h2><h3 id="CSS-实例"><a href="#CSS-实例" class="headerlink" title="CSS 实例"></a>CSS 实例</h3><p>CSS声明总是以分号(;)结束，声明总以大括号({})括起来:</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/632877C9-2462-41D6-BD0E-F7317E4C42AC.jpg" alt="rules"></p><p><strong>选择器</strong>通常是您需要改变样式的 HTML 元素。</p><p>每条声明由一个属性和一个值组成。</p><p><strong>属性</strong>（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p><h3 id="CSS-注释"><a href="#CSS-注释" class="headerlink" title="CSS 注释"></a>CSS 注释</h3><p>CSS注释以 <code>/*</code> 开始, 以 <code>*/</code> 结束</p><h2 id="CSS-id和class"><a href="#CSS-id和class" class="headerlink" title="CSS id和class"></a>CSS id和class</h2><h3 id="id-选择器"><a href="#id-选择器" class="headerlink" title="id 选择器"></a>id 选择器</h3><p>可以为标有特定 id 的 HTML 元素指定特定的样式。（一个元素）</p><p>HTML元素以id属性来<strong>设置</strong>id选择器,CSS 中 id 选择器以 “<strong>#</strong>“ 来<strong>定义</strong></p><p><strong>注意</strong>：ID属性不要以数字开头，数字开头的ID在 Mozilla/Firefox 浏览器中不起作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在CSS中定义id选择器*/</span></span><br><span class="line"><span class="selector-id">#para1</span> </span><br><span class="line">&#123;    </span><br><span class="line">    <span class="attribute">text-align</span>:center;    </span><br><span class="line">    <span class="attribute">color</span>:red; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="class-选择器"><a href="#class-选择器" class="headerlink" title="class 选择器"></a>class 选择器</h3><p>class 选择器用于描述一组元素的样式，class可以在<strong>多个元素</strong>中使用。</p><p>class 选择器在HTML中以class属性表示, 在 CSS 中，类选择器以一个点”.”号显示：</p><p><strong>注意</strong>：类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*所有拥有 center 类的 HTML 元素均为居中*/</span></span><br><span class="line"><span class="selector-class">.center</span> &#123;<span class="attribute">text-align</span>:center;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*指定特定的HTML元素使用class/*</span></span><br><span class="line"><span class="comment">/*所有的 p 元素使用 class=&quot;center&quot; 让该元素的文本居中*/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.center</span> &#123;<span class="attribute">text-align</span>:center;&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS创建"><a href="#CSS创建" class="headerlink" title="CSS创建"></a>CSS创建</h2><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>每个页面使用 <code>&lt;link&gt; </code>标签链接到样式表。 <code>&lt;link&gt; </code>标签在（文档的）头部</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystyle.css&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p><p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存</p><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>使用 <code>&lt;style&gt;</code> 标签在文档头部定义内部样式表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        hr &#123;<span class="attribute">color</span>:sienna;&#125; </span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125; </span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&quot;images/back40.gif&quot;</span>);&#125; </span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:sienna;margin-left:20px&quot;</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：<em>不要在属性值与单位之间留有空格（如：”margin-left: 20 px” ），正确的写法是 “margin-left: 20px” 。</em></p><h3 id="多重样式优先级"><a href="#多重样式优先级" class="headerlink" title="多重样式优先级"></a>多重样式优先级</h3><p><strong>（内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</strong></p><h2 id="CSS背景"><a href="#CSS背景" class="headerlink" title="CSS背景"></a>CSS背景</h2><table><thead><tr><th align="center">Property</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><a href="https://www.runoob.com/cssref/css3-pr-background.html">background</a></td><td align="center">简写属性，作用是将背景属性设置在一个声明中。</td></tr><tr><td align="center"><a href="https://www.runoob.com/cssref/pr-background-attachment.html">background-attachment</a></td><td align="center">背景图像是否固定或者随着页面的其余部分滚动。</td></tr><tr><td align="center"><a href="https://www.runoob.com/cssref/pr-background-color.html">background-color</a></td><td align="center">设置元素的背景颜色。</td></tr><tr><td align="center"><a href="https://www.runoob.com/cssref/pr-background-image.html">background-image</a></td><td align="center">把图像设置为背景。</td></tr><tr><td align="center"><a href="https://www.runoob.com/cssref/pr-background-position.html">background-position</a></td><td align="center">设置背景图像的起始位置。</td></tr><tr><td align="center"><a href="https://www.runoob.com/cssref/pr-background-repeat.html">background-repeat</a></td><td align="center">设置背景图像是否及如何重复。</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">学习一些CSS基础知识</summary>
    
    
    
    
    <category term="Web" scheme="http://hanicy.com/tags/Web/"/>
    
    <category term="CSS" scheme="http://hanicy.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Web技术之HTML</title>
    <link href="http://hanicy.com/2021/09/28/Web%E6%8A%80%E6%9C%AF%E4%B9%8BHTML/"/>
    <id>http://hanicy.com/2021/09/28/Web%E6%8A%80%E6%9C%AF%E4%B9%8BHTML/</id>
    <published>2021-09-28T08:12:13.000Z</published>
    <updated>2021-10-11T02:54:54.098Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h2><p>通过 <code>&lt;h1&gt; - &lt;h6&gt;</code> 标签进行定义的</p><ul><li>浏览器会自动地在标题的前后添加空行</li><li>请确保将 HTML 标题 标签只用于标题。不要仅仅是为了生成<strong>粗体</strong>或<strong>大号</strong>的文本而使用标题</li></ul><h2 id="HTML链接"><a href="#HTML链接" class="headerlink" title="HTML链接"></a>HTML链接</h2><h2 id="HTML头部-lt-head-gt"><a href="#HTML头部-lt-head-gt" class="headerlink" title="HTML头部&lt;head&gt;"></a>HTML头部<code>&lt;head&gt;</code></h2><p><code>&lt;head&gt;</code> 元素包含了所有的头部标签元素。在 <code>&lt;head&gt;</code>元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p><h3 id="lt-title-gt"><a href="#lt-title-gt" class="headerlink" title="&lt;title&gt;"></a><code>&lt;title&gt;</code></h3><ul><li>定义了浏览器工具栏的标题</li><li>当网页添加到收藏夹时，显示在收藏夹中的标题</li><li>显示在搜索引擎结果页面的标题</li></ul><h3 id="lt-base-gt"><a href="#lt-base-gt" class="headerlink" title="&lt;base&gt;"></a><code>&lt;base&gt;</code></h3><p>定义了页面链接标签的默认链接地址</p><h3 id="lt-link-gt"><a href="#lt-link-gt" class="headerlink" title="&lt;link&gt;"></a><code>&lt;link&gt;</code></h3><ul><li><p>定义了文档与外部资源之间的关系。</p></li><li><p>通常用于链接到样式表</p></li></ul><h3 id="lt-style-gt"><a href="#lt-style-gt" class="headerlink" title="&lt;style&gt;"></a><code>&lt;style&gt;</code></h3><p> 定义了HTML文档的样式文件</p><h3 id="lt-meta-gt"><a href="#lt-meta-gt" class="headerlink" title="&lt;meta&gt;"></a><code>&lt;meta&gt;</code></h3><p>META 元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。</p><h3 id="lt-script-gt"><a href="#lt-script-gt" class="headerlink" title="&lt;script&gt;"></a><code>&lt;script&gt;</code></h3><p>用于加载脚本文件，如： JavaScript。</p><h2 id="HTML样式CSS"><a href="#HTML样式CSS" class="headerlink" title="HTML样式CSS"></a>HTML样式CSS</h2><p>CSS 可以通过以下方式添加到HTML中:</p><ul><li>内联样式- 在HTML元素中使用”style” <strong>属性</strong></li><li>内部样式表 -在HTML文档头部<code>&lt;head&gt;</code> 区域使用<code>&lt;style&gt;</code><strong>元素</strong> 来包含CSS</li><li>外部引用 - 使用外部 CSS <strong>文件</strong></li></ul><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><p>在相关的标签中使用<code>style</code>，多个属性之间用；间隔</p><ul><li><p><code>background-color</code>（背景色）定义一个元素的背景颜色</p></li><li><p><code>font-family</code>（字体），<code>color</code>（颜色），和<code>font-size</code>（字体大小）属性来定义字体的样式</p></li><li><p><code>text-align</code>（文字对齐）属性指定文本的水平与垂直对齐方式</p></li></ul><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>在<code>&lt;head&gt;</code> 部分通过 <code>&lt;style&gt;</code>标签定义内部样式表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:yellow;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue;&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>使用外部样式表，可以通过更改一个文件来改变整个站点的外观。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystyle.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML图像"><a href="#HTML图像" class="headerlink" title="HTML图像"></a>HTML图像</h2><h3 id="图像标签（-lt-img-gt-）和源属性（Src）"><a href="#图像标签（-lt-img-gt-）和源属性（Src）" class="headerlink" title="图像标签（ &lt;img&gt;）和源属性（Src）"></a>图像标签（ <code>&lt;img&gt;</code>）和源属性（Src）</h3><p>在 HTML 中，图像由<code>&lt;img&gt;</code> 标签定义。</p><p><code>&lt;img&gt;</code> 是空标签，意思是说，它只包含属性，并且没有闭合标签。</p><p>要在页面上显示图像，你需要使用源属性（src）。src 指 “source”。源属性的值是图像的 URL 地址。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;some_text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Alt属性"><a href="#Alt属性" class="headerlink" title="Alt属性"></a>Alt属性</h3><p>alt 属性用来为图像定义一串预备的可替换的文本。</p><p>在浏览器无法载入图像时，替换文本属性告诉读者失去的信息。此时，浏览器将<strong>显示这个替代性的文本</strong>而不是图像</p><h3 id="height（高度）-与-width（宽度）"><a href="#height（高度）-与-width（宽度）" class="headerlink" title="height（高度） 与 width（宽度）"></a>height（高度） 与 width（宽度）</h3><h2 id="HTML表格"><a href="#HTML表格" class="headerlink" title="HTML表格"></a>HTML表格</h2><p>表格由 <code>&lt;table&gt;</code> 标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由 <code>&lt;td&gt;</code> 标签定义，即指表格数据table data）。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p><ul><li><p>边框，设置<code>&lt;table&gt;</code>属性border</p></li><li><p>单元格跨行/跨列，设置<code>&lt;th&gt;</code>属性<code>rowspan</code>/<code>colspan</code></p></li><li><p>格边距，设置<code>&lt;table&gt;</code>属性<code>cellpadding</code></p></li><li><p>格间距，设置<code>&lt;table&gt;</code>属性<code>cellspacing</code></p></li></ul><table><thead><tr><th align="left">标签</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code> &lt;table&gt;</code></td><td align="left">定义表格</td></tr><tr><td align="left"><code>&lt;th&gt;</code></td><td align="left">定义表格的表头，显示为<strong>粗体居中</strong>的文本</td></tr><tr><td align="left"><code>&lt;tr&gt; </code></td><td align="left">定义表格的行</td></tr><tr><td align="left"><code>&lt;td&gt;  </code></td><td align="left">定义表格单元</td></tr><tr><td align="left"><code>&lt;caption&gt;</code></td><td align="left">定义表格标题</td></tr><tr><td align="left"><code>&lt;colgroup&gt; </code></td><td align="left">定义表格列的组</td></tr><tr><td align="left"><code>&lt;col&gt;</code></td><td align="left">定义用于表格列的属性</td></tr><tr><td align="left"><code>&lt;thread&gt;</code></td><td align="left">定义表格的页眉</td></tr><tr><td align="left"><code>&lt;tbody&gt; </code></td><td align="left">定义表格的主体</td></tr><tr><td align="left"><code>&lt;tfoot&gt;</code></td><td align="left">定义表格的页脚</td></tr></tbody></table><h2 id="HTML列表"><a href="#HTML列表" class="headerlink" title="HTML列表"></a>HTML列表</h2><ul><li>无序列表<code>&lt;ul&gt;</code></li><li>有序列表始于 <code>&lt;ol&gt; </code>标签</li><li>有序和无序列表的每个列表项始于 <code>&lt;li&gt; </code>标签</li></ul><table><thead><tr><th align="left">标签</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>&lt;ol&gt;</code></td><td align="left">定义有序列表</td></tr><tr><td align="left"><code>&lt;ul&gt;</code></td><td align="left">定义无序列表</td></tr><tr><td align="left"><code>&lt;li&gt;</code></td><td align="left">定义列表项(list item)</td></tr><tr><td align="left"><code> &lt;dl&gt;</code></td><td align="left">自定义列表(definition lists)</td></tr><tr><td align="left"><code>&lt;dt&gt;</code></td><td align="left">自定义列表项目(definition term)</td></tr><tr><td align="left"><code>&lt;dd&gt;</code></td><td align="left">定义自定列表项的描述(definition description)</td></tr></tbody></table><h2 id="HTML区块"><a href="#HTML区块" class="headerlink" title="HTML区块"></a>HTML区块</h2><table><thead><tr><th>区块元素</th><th>内联元素</th></tr></thead><tbody><tr><td>在浏览器显示时，通常会以新行来开始（和结束）</td><td>显示时通常不会以新行开始</td></tr><tr><td><code>&lt;div&gt;</code></td><td><code>&lt;span&gt;</code></td></tr><tr><td>定义了文档的区域，块级 (block-level)</td><td>用来组合文档中的行内元素， 内联元素(inline)</td></tr></tbody></table><h2 id="HTML-表单"><a href="#HTML-表单" class="headerlink" title="HTML 表单"></a>HTML 表单</h2><p>表单是一个包含表单元素的区域。使用表单标签 <code>&lt;form&gt;</code> 来设置</p><p>多数情况下被用到的表单标签是输入标签（<code>&lt;input&gt;</code>）。</p><p>输入类型是由类型属性（type）定义的。大多数经常被用到的输入类型如下：</p><h3 id="文本域（Text-Fields）"><a href="#文本域（Text-Fields）" class="headerlink" title="文本域（Text Fields）"></a>文本域（Text Fields）</h3><p><code>&lt;input type=&quot;text&quot;&gt;</code></p><form>First name: <input type="text" name="firstname"><br>Last name: <input type="text" name="lastname"></form><h3 id="密码字段"><a href="#密码字段" class="headerlink" title="密码字段"></a>密码字段</h3><p><code>&lt;input type=&quot;password&quot;&gt;</code></p><form>Password: <input type="password" name="pwd"></form><h3 id="单选按钮（Radio-Buttons）"><a href="#单选按钮（Radio-Buttons）" class="headerlink" title="单选按钮（Radio Buttons）"></a>单选按钮（Radio Buttons）</h3><p><code>&lt;input type=&quot;radio&quot;&gt;</code></p><form>males: <input type="radio" name= 'm'><br>females: <input type="radio" name= 'fm'></form><h3 id="复选框（Checkboxes）"><a href="#复选框（Checkboxes）" class="headerlink" title="复选框（Checkboxes）"></a>复选框（Checkboxes）</h3><p><code>&lt;input type=&quot;checkbox&quot;&gt; </code></p><form><input type="checkbox" name="vehicle" value="Bike">I have a bike<br><input type="checkbox" name="vehicle" value="Car">I have a car</form><h3 id="提交按钮-Submit-Button"><a href="#提交按钮-Submit-Button" class="headerlink" title="提交按钮(Submit Button)"></a>提交按钮(Submit Button)</h3><p><code>&lt;input type=&quot;submit&quot;&gt;</code></p><form name="input" action="html_form_action.php" method="get">Username: <input type="text" name="user"><input type="submit" value="Submit"></form><h2 id="HTML框架"><a href="#HTML框架" class="headerlink" title="HTML框架"></a>HTML框架</h2><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。</p><p><code>&lt;iframe src=&quot;URL&quot;&gt;&lt;/iframe&gt;</code></p><h3 id="使用iframe来显示目标链接页面"><a href="#使用iframe来显示目标链接页面" class="headerlink" title="使用iframe来显示目标链接页面"></a>使用iframe来显示目标链接页面</h3><p>iframe可以显示一个目标链接的页面</p><p>目标链接的target属性必须指向iframe的name，如下实例:</p><iframe src="demo_iframe.htm" name="iframe_a"></iframe> <p><a href="http://www.runoob.com" target="iframe_a" rel="noopener">RUNOOB.COM</a></p>]]></content>
    
    
    <summary type="html">学习一些HTML基础知识</summary>
    
    
    
    
    <category term="HTML" scheme="http://hanicy.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>python数值运算（一）NumPy</title>
    <link href="http://hanicy.com/2021/08/19/numpy/"/>
    <id>http://hanicy.com/2021/08/19/numpy/</id>
    <published>2021-08-19T08:26:30.000Z</published>
    <updated>2021-08-20T06:31:13.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NumPy"><a href="#NumPy" class="headerlink" title="NumPy"></a>NumPy</h1><h2 id="NumPy简介"><a href="#NumPy简介" class="headerlink" title="NumPy简介"></a>NumPy简介</h2><p>维基百科是这样说的</p><blockquote><p>NumPy是Python语言的一个扩展程序库。<strong>支持高阶大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。</strong>NumPy的前身Numeric最早是由Jim Hugunin与其它协作者共同开发，2005年，Travis Oliphant在Numeric中结合了另一个同性质的程序库Numarray的特色，并加入了其它扩展而开发了NumPy。NumPy为开放源代码并且由许多协作者共同维护开发。</p><p>NumPy提供了与MATLAB相似的功能与操作方式，因为两者皆为解释型语言，并且都可以让用户在针对数组或矩阵运算时提供较标量运算更快的性能。两者相较之下，MATLAB提供了大量的扩展工具箱（例如Simulink）；而NumPy则是根基于Python这个更现代、完整并且开放源代码的编程语言之上。此外NumPy也可以结合其它的Python扩展库。例如SciPy，这个库提供了更多与MATLAB相似的功能；以及Matplotlib，这是一个与MATLAB内置绘图功能类似的库。而从本质上来说，<strong>NumPy与MATLAB同样是利用BLAS与LAPACK来提供高效率的线性代数运算。</strong></p></blockquote><p>~~<em>本菜鸡上学期摸鱼没听过python课，借着暑假学习下numpy和pandas来准备九月的数模国赛</em></p><h2 id="NumPy-数组对象-ndarray"><a href="#NumPy-数组对象-ndarray" class="headerlink" title="NumPy 数组对象 ndarray"></a>NumPy 数组对象 ndarray</h2><ol><li>属性</li></ol><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>ndim</code></td><td align="center">返回int，数组<strong>维数</strong></td></tr><tr><td align="center"><code>size</code></td><td align="center">返回int，数组<strong>元素总数</strong>，即每一维长度的乘积</td></tr><tr><td align="center"><code>dtype</code></td><td align="center">返回data-type，数组<strong>成员类型</strong></td></tr><tr><td align="center"><code>shape</code></td><td align="center">返回 tuple，表示数组的<strong>尺寸</strong>，对于 n 行 m 列的矩阵，形状为(n,m)</td></tr><tr><td align="center"><code>itemsize</code></td><td align="center">返回 int，表示数组的<strong>每个元素的大小（</strong>以字节为单位）</td></tr><tr><td align="center">2. 创建数组对象</td><td align="center"></td></tr></tbody></table><ul><li>创建数组并查看数组属性</li></ul><p><code>numpy.array(object, dtype=None, copy=True, order=&#39;K&#39;, subok=False, ndmin=0)  //注意是array不是ndarry</code> </p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>object</code></td><td align="center">接收<strong>array</strong>，表示想要创建的数组。<em>无默认</em></td></tr><tr><td align="center"><code>dtype</code></td><td align="center">接收data-type，表示数组所需的数据类型。如果未给定，则选择保存对象所需的最小类型。<em>默认为None</em>。</td></tr><tr><td align="center"><code>ndmin</code></td><td align="center">接收int。指定生成数组应该具有的最小维数。<em>默认为None</em></td></tr></tbody></table><ul><li><p>重新设置数组的 <code>shape</code> 属性</p><p><code>arr.shape = a,b  //总数必须不变，即不允许截断</code></p></li><li><p>使用 <code>arange</code> 函数创建数组</p><p><code>arange(begin,end,等分量)   // [begin,end)</code></p></li><li><p>使用 <code>linspace</code> 函数创建等差数组 (begin,end,num)</p><p>公差d = (end - start) / (num - 1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;b = np.linspace(<span class="number">0</span>,<span class="number">1</span>,<span class="number">9</span>)</span><br><span class="line">[<span class="number">0.</span>    <span class="number">0.125</span> <span class="number">0.25</span>  <span class="number">0.375</span> <span class="number">0.5</span>   <span class="number">0.625</span> <span class="number">0.75</span>  <span class="number">0.875</span> <span class="number">1.</span>   ]</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>logspace</code> 函数创建<strong>等比</strong>数列</p></li><li><p><code>zeros</code>函数 全0数组</p></li><li><p><code>eye</code>函数创建<strong>单位</strong>矩阵</p></li><li><p><code>diag</code>函数创建<strong>对角</strong>矩阵</p></li><li><p><code>ones</code>函数创建<strong>全1</strong>数组</p></li></ul><h2 id="NumPy-矩阵与通用函数"><a href="#NumPy-矩阵与通用函数" class="headerlink" title="NumPy 矩阵与通用函数"></a>NumPy 矩阵与通用函数</h2><h2 id="利用-NumPy-进行统计分析"><a href="#利用-NumPy-进行统计分析" class="headerlink" title="利用 NumPy 进行统计分析"></a>利用 NumPy 进行统计分析</h2><hr><p>参考</p><ol><li><a href="https://zh.wikipedia.org/wiki/NumPy">维基百科numpy</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NumPy&quot;&gt;&lt;a href=&quot;#NumPy&quot; class=&quot;headerlink&quot; title=&quot;NumPy&quot;&gt;&lt;/a&gt;NumPy&lt;/h1&gt;&lt;h2 id=&quot;NumPy简介&quot;&gt;&lt;a href=&quot;#NumPy简介&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="python" scheme="http://hanicy.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>hexo Front-matter</title>
    <link href="http://hanicy.com/2021/08/09/Front-matter/"/>
    <id>http://hanicy.com/2021/08/09/Front-matter/</id>
    <published>2021-08-09T08:52:56.000Z</published>
    <updated>2021-09-28T11:38:07.288Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]<br>Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量</p><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><h2 id="主页文章节选"><a href="#主页文章节选" class="headerlink" title="主页文章节选"></a>主页文章节选</h2><p>修改 <code>index_post_content</code> 的<code>method</code>属性</p><ol><li>description： 只显示description</li><li>both： 优先选择description，如果没有配置description，则显示自动节选的内容</li><li>auto_excerpt：只显示自动节选</li><li>false： 不显示文章内容<h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><code>front-matter</code>区域中设置<code>sticky: 1</code>属性，数值越大，优先级越大<h2 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h2></li><li><code>front-matter</code>区域中设置<code>cover</code>属性，并填上要显示的图片地址</li><li>默认图片设置，随机一张 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_cover:</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure><h2 id="文章页相关配置"><a href="#文章页相关配置" class="headerlink" title="文章页相关配置"></a>文章页相关配置</h2></li><li>文章版权<br>增加 <code>copyright: false</code> 不显示版权信息</li><li>TOC单独配置</li></ol><ul><li>头部加入<code>toc_number</code>与<code>toc</code> 并配置</li><li>主题会优先判断文章Markdown的Front-matter是否有配置，如有，则以Front-matter的配置为准。否则，以主题配置文件中的配置为准</li></ul><ol start="3"><li></li></ol><hr><p>参考</p><ul><li><a href="https://guides.github.com/features/mastering-markdown/">MasteringMarkdown</a></li><li><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/markdown-basics">MPE</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E7%A4%BE%E4%BA%A4%E5%9C%96%E6%A8%99">Butterfly theme</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;br&gt;Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量&lt;/p&gt;
&lt;h2 id=&quot;基本配置&quot;&gt;&lt;a href=&quot;#基本配置&quot; class=&quot;headerlink&quot; title=&quot;基本配置&quot;&gt;&lt;/a&gt;基本配置&lt;/h2&gt;&lt;h2 id=&quot;</summary>
      
    
    
    
    
    <category term="Hexo" scheme="http://hanicy.com/tags/Hexo/"/>
    
    <category term="Front-matter" scheme="http://hanicy.com/tags/Front-matter/"/>
    
  </entry>
  
  <entry>
    <title>hexo Front-matter</title>
    <link href="http://hanicy.com/2021/08/09/hhh/"/>
    <id>http://hanicy.com/2021/08/09/hhh/</id>
    <published>2021-08-09T08:52:56.000Z</published>
    <updated>2021-09-15T02:32:44.042Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-基本配置todo"><a href="#1-基本配置todo" class="headerlink" title="1. 基本配置todo"></a>1. <em>基本配置todo</em></h2><h2 id="2-主页文章节选"><a href="#2-主页文章节选" class="headerlink" title="2. 主页文章节选"></a>2. 主页文章节选</h2><p>修改 <code>index_post_content</code> 的<code>method</code>属性</p><ol><li>description： 只显示description</li><li>both： 优先选择description，如果没有配置description，则显示自动节选的内容</li><li>auto_excerpt：只显示自动节选</li><li>false： 不显示文章内容<h2 id="3-文章置顶"><a href="#3-文章置顶" class="headerlink" title="3. 文章置顶"></a>3. 文章置顶</h2><code>front-matter</code>区域中设置<code>sticky: 1</code>属性，数值越大，优先级越大<h2 id="4-文章封面"><a href="#4-文章封面" class="headerlink" title="4. 文章封面"></a>4. 文章封面</h2></li><li><code>front-matter</code>区域中设置<code>cover</code>属性，并填上要显示的图片地址</li><li>默认图片设置，随机一张 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_cover:</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure><h2 id="5-文章页相关配置"><a href="#5-文章页相关配置" class="headerlink" title="5. 文章页相关配置"></a>5. 文章页相关配置</h2></li><li>文章版权<br>增加 <code>copyright: false</code> 不显示版权信息</li><li>TOC单独配置</li></ol><ul><li>头部加入<code>toc_number</code>与<code>toc</code> 并配置</li><li>主题会优先判断文章Markdown的Front-matter是否有配置，如有，则以Front-matter的配置为准。否则，以主题配置文件中的配置为准</li></ul><hr><p>参考</p><ul><li><a href="https://guides.github.com/features/mastering-markdown/">MasteringMarkdown</a></li><li><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/markdown-basics">MPE</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E7%A4%BE%E4%BA%A4%E5%9C%96%E6%A8%99">Butterfly theme</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-基本配置todo&quot;&gt;&lt;a href=&quot;#1-基本配置todo&quot; class=&quot;headerlink&quot; title=&quot;1. 基本配置todo&quot;&gt;&lt;/a&gt;1. &lt;em&gt;基本配置todo&lt;/em&gt;&lt;/h2&gt;&lt;h2 id=&quot;2-主页文章节选&quot;&gt;&lt;a href=&quot;#2-</summary>
      
    
    
    
    
    <category term="Hexo" scheme="http://hanicy.com/tags/Hexo/"/>
    
    <category term="Front-matter" scheme="http://hanicy.com/tags/Front-matter/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://hanicy.com/2021/08/09/hello-world/"/>
    <id>http://hanicy.com/2021/08/09/hello-world/</id>
    <published>2021-08-09T08:41:16.433Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
